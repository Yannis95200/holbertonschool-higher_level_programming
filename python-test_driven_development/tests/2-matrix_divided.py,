>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

>>> matrix = [[1, 2, 3],[4, 5, 6]]
>>> matrix_divided(matrix, 45)
[[0.02, 0.04, 0.07], [0.09, 0.11, 0.13]]
>>> matrix_divided(matrix, 250505)
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]
>>> matrix_divided(matrix, 2)
[[0.5, 1.0, 1.5], [2.0, 2.5, 3.0]]

>>> matrix = [[1, 2, 3],[4, 5, 6]]
>>> matrix_divided(matrix, float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

>>> matrix = [[1, 2, 3],[4, 5, 6]]
>>> matrix_divided(matrix, float('nan'))
[[nan, nan, nan], [nan, nan, nan]]

>>> matrix = [[1, 'kurapika', 3],[4, 5, 6]]
>>> matrix_divided(matrix, 150)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 2, 3],[4, 5, 6]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> matrix = [[1, 2, 3],[5, 6]]
>>> matrix_divided(matrix, 5)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix = [[1, 2, 3],[4, 5, 6]]
>>> matrix_divided(matrix, chr)
Traceback (most recent call last):
...
TypeError: div must be a number

>>> matrix = [[1, 2, 3],[4, 5, 6]]
>>> matrix_divided(matrix, float('inf'), 5)
Traceback (most recent call last):
...
TypeError: matrix_divided() takes 2 positional arguments but 3 were given

>>> matrix = [[1, 2, 3],[4, 5, 6]]
>>> matrix_divided(matrix, float('nan'), 0)
Traceback (most recent call last):
...
TypeError: matrix_divided() takes 2 positional arguments but 3 were given